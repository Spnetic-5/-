{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sp-lit/Desktop/cs/screens/AddScreen.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Text, Button } from 'react-native-elements';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport format from 'date-fns/format';\nimport { Picker } from '@react-native-picker/picker';\nimport { db, auth } from \"../firebase\";\nimport firebase from 'firebase';\n\nvar AddScreen = function AddScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitLoading = _useState2[0],\n      setSubmitLoading = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: 'Add Expense'\n    });\n  }, [navigation]);\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      input = _useState4[0],\n      setInput = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      amount = _useState6[0],\n      setAmount = _useState6[1];\n\n  var createExpense = function createExpense() {\n    if (input && amount && selDate && selectedLanguage && auth) {\n      setSubmitLoading(true);\n      db.collection('expense').add({\n        email: auth.currentUser.email,\n        text: input,\n        price: amount,\n        date: selDate,\n        type: selectedLanguage,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        userDate: result\n      }).then(function () {\n        return clearInputFields();\n      }).catch(function (error) {\n        return alert(error.message);\n      });\n    } else {\n      alert('All fields are mandatory');\n      setSubmitLoading(false);\n    }\n  };\n\n  var clearInputFields = function clearInputFields() {\n    alert('Created Successfully');\n    setInput('');\n    setAmount('');\n    setSelDate(new Date());\n    setSelectedLanguage('expense');\n    navigation.navigate('Home');\n    setSubmitLoading(false);\n  };\n\n  var _useState7 = useState(new Date()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selDate = _useState8[0],\n      setSelDate = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      show = _useState10[0],\n      setShow = _useState10[1];\n\n  var _useState11 = useState('date'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mode = _useState12[0],\n      setMode = _useState12[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setSelDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var result = format(selDate, 'dd/MM/yyyy');\n\n  var _useState13 = useState('expense'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedLanguage = _useState14[0],\n      setSelectedLanguage = _useState14[1];\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Add Text\",\n    value: input,\n    onChangeText: function onChangeText(text) {\n      return setInput(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: selDate,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    keyboardType: \"numeric\",\n    placeholder: \"Add Amount\",\n    value: amount,\n    onChangeText: function onChangeText(text) {\n      return setAmount(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.input,\n    placeholder: \"Select Date\",\n    value: result,\n    onPress: showDatepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, result ? result : new Date()), React.createElement(Picker, {\n    selectedValue: selectedLanguage,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedLanguage(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Expense\",\n    value: \"expense\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Income\",\n    value: \"income\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    containerStyle: styles.button,\n    title: \"Add\",\n    onPress: createExpense,\n    loading: submitLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AddScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FFFFFF',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10\n  },\n  inputContainer: {\n    width: 300\n  },\n  input: {\n    height: 50,\n    borderColor: 'gray',\n    borderBottomWidth: 1,\n    marginBottom: 20\n  },\n  button: {\n    width: 300,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/sp-lit/Desktop/cs/screens/AddScreen.js"],"names":["StatusBar","React","useLayoutEffect","useState","Text","Button","DateTimePicker","format","Picker","db","auth","firebase","AddScreen","navigation","submitLoading","setSubmitLoading","setOptions","title","input","setInput","amount","setAmount","createExpense","selDate","selectedLanguage","collection","add","email","currentUser","text","price","date","type","timestamp","firestore","FieldValue","serverTimestamp","userDate","result","then","clearInputFields","catch","error","alert","message","setSelDate","Date","setSelectedLanguage","navigate","show","setShow","mode","setMode","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","styles","container","inputContainer","itemValue","itemIndex","button","StyleSheet","create","backgroundColor","flex","alignItems","justifyContent","padding","width","height","borderColor","borderBottomWidth","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import {StatusBar} from 'expo-status-bar'\nimport React, {useLayoutEffect, useState} from 'react'\nimport {StyleSheet, View, KeyboardAvoidingView, TextInput} from 'react-native'\nimport {Text, Button} from 'react-native-elements'\nimport DateTimePicker from '@react-native-community/datetimepicker'\nimport format from 'date-fns/format'\nimport {Picker} from '@react-native-picker/picker'\nimport {db, auth} from '../firebase'\nimport firebase from 'firebase'\n\nconst AddScreen = ({navigation}) => {\n  const [submitLoading, setSubmitLoading] = useState(false)\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: 'Add Expense',\n    })\n  }, [navigation])\n  const [input, setInput] = useState('')\n  const [amount, setAmount] = useState('')\n  const createExpense = () => {\n    if (input && amount && selDate && selectedLanguage && auth) {\n      setSubmitLoading(true)\n      db.collection('expense')\n        .add({\n          email: auth.currentUser.email,\n          text: input,\n          price: amount,\n          date: selDate,\n          type: selectedLanguage,\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          userDate: result,\n        })\n        .then(() => clearInputFields())\n        .catch((error) => alert(error.message))\n    } else {\n      alert('All fields are mandatory')\n      setSubmitLoading(false)\n    }\n  }\n\n  const clearInputFields = () => {\n    alert('Created Successfully')\n    setInput('')\n    setAmount('')\n    setSelDate(new Date())\n    setSelectedLanguage('expense')\n    navigation.navigate('Home')\n    setSubmitLoading(false)\n  }\n  // Date Picker\n  const [selDate, setSelDate] = useState(new Date())\n  const [show, setShow] = useState(false)\n  const [mode, setMode] = useState('date')\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate || date\n    setShow(Platform.OS === 'ios')\n    setSelDate(currentDate)\n  }\n  const showMode = (currentMode) => {\n    setShow(true)\n    setMode(currentMode)\n  }\n  const showDatepicker = () => {\n    showMode('date')\n  }\n  const result = format(selDate, 'dd/MM/yyyy')\n\n  // Select Dropdown\n  const [selectedLanguage, setSelectedLanguage] = useState('expense')\n\n  return (\n    <KeyboardAvoidingView style={styles.container}>\n      <StatusBar style='dark' />\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.input}\n          placeholder='Add Text'\n          value={input}\n          onChangeText={(text) => setInput(text)}\n        />\n\n        {show && (\n          <DateTimePicker\n            testID='dateTimePicker'\n            value={selDate}\n            mode={mode}\n            is24Hour={true}\n            display='default'\n            onChange={onChange}\n          />\n        )}\n\n        <TextInput\n          style={styles.input}\n          keyboardType='numeric'\n          placeholder='Add Amount'\n          value={amount}\n          onChangeText={(text) => setAmount(text)}\n        />\n\n        <Text\n          style={styles.input}\n          placeholder='Select Date'\n          value={result}\n          onPress={showDatepicker}\n          // editable={false}\n        >\n          {result ? result : new Date()}\n        </Text>\n        <Picker\n          selectedValue={selectedLanguage}\n          onValueChange={(itemValue, itemIndex) =>\n            setSelectedLanguage(itemValue)\n          }\n        >\n          <Picker.Item label='Expense' value='expense' />\n          <Picker.Item label='Income' value='income' />\n        </Picker>\n\n        <Button\n          containerStyle={styles.button}\n          title='Add'\n          onPress={createExpense}\n          loading={submitLoading}\n        />\n      </View>\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default AddScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FFFFFF',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n  },\n  inputContainer: {\n    width: 300,\n  },\n  input: {\n    height: 50,\n    borderColor: 'gray',\n    borderBottomWidth: 1,\n    marginBottom: 20,\n  },\n  button: {\n    width: 300,\n    marginTop: 10,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}