{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sp-lit/Desktop/cs/components/CustomListItem.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem, Text, Divider } from 'react-native-elements';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport ModalActions from \"./ModalActions\";\n\nvar CustomListItem = function CustomListItem(_ref) {\n  var _Number, _Number2;\n\n  var info = _ref.info,\n      navigation = _ref.navigation,\n      id = _ref.id;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem, {\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, info.type === 'expense' ? React.createElement(View, {\n    style: styles.left,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"money-off\",\n    size: 24,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }\n  })) : React.createElement(View, {\n    style: styles.income,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"attach-money\",\n    size: 24,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  })), React.createElement(ListItem.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, React.createElement(ListItem.Title, {\n    style: {\n      fontWeight: 'bold',\n      textTransform: 'capitalize'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, info == null ? void 0 : info.text), React.createElement(ListItem.Subtitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, info == null ? void 0 : info.userDate)), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, info.type === 'expense' ? React.createElement(Text, {\n    style: styles.right,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"$ -\", (_Number = Number(info == null ? void 0 : info.price)) == null ? void 0 : _Number.toFixed(2)) : React.createElement(Text, {\n    style: styles.rightIncome,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"$ \", (_Number2 = Number(info == null ? void 0 : info.price)) == null ? void 0 : _Number2.toFixed(2)))), React.createElement(Divider, {\n    style: {\n      backgroundColor: 'lightgrey'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), React.createElement(ModalActions, {\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    navigation: navigation,\n    id: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CustomListItem;\nvar styles = StyleSheet.create({\n  left: {\n    backgroundColor: '#533461',\n    borderRadius: 8,\n    padding: 10\n  },\n  income: {\n    backgroundColor: '#61ACB8',\n    borderRadius: 8,\n    padding: 10\n  },\n  right: {\n    fontWeight: 'bold',\n    color: 'red'\n  },\n  rightIncome: {\n    fontWeight: 'bold',\n    color: 'green'\n  }\n});","map":{"version":3,"sources":["/home/sp-lit/Desktop/cs/components/CustomListItem.js"],"names":["React","useState","ListItem","Text","Divider","MaterialIcons","ModalActions","CustomListItem","info","navigation","id","modalVisible","setModalVisible","type","styles","left","income","fontWeight","textTransform","text","userDate","right","Number","price","toFixed","rightIncome","backgroundColor","StyleSheet","create","borderRadius","padding","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport {ListItem, Text, Divider} from 'react-native-elements'\nimport {MaterialIcons} from '@expo/vector-icons'\nimport ModalActions from './ModalActions'\n\nconst CustomListItem = ({info, navigation, id}) => {\n  const [modalVisible, setModalVisible] = useState(false)\n\n  return (\n    <>\n      <View>\n        <ListItem onPress={() => setModalVisible(true)}>\n          {info.type === 'expense' ? (\n            <View style={styles.left}>\n              <MaterialIcons name='money-off' size={24} color='white' />\n            </View>\n          ) : (\n            <View style={styles.income}>\n              <MaterialIcons name='attach-money' size={24} color='white' />\n            </View>\n          )}\n          <ListItem.Content>\n            <ListItem.Title\n              style={{fontWeight: 'bold', textTransform: 'capitalize'}}\n            >\n              {info?.text}\n            </ListItem.Title>\n            <ListItem.Subtitle>\n              {/* {new Date(info?.timestamp?.toDate()).toUTCString()} */}\n              {info?.userDate}\n            </ListItem.Subtitle>\n          </ListItem.Content>\n          <View>\n            {info.type === 'expense' ? (\n              <Text style={styles.right}>\n                $ -{Number(info?.price)?.toFixed(2)}\n              </Text>\n            ) : (\n              <Text style={styles.rightIncome}>\n                $ {Number(info?.price)?.toFixed(2)}\n              </Text>\n            )}\n          </View>\n        </ListItem>\n        <Divider style={{backgroundColor: 'lightgrey'}} />\n      </View>\n      <ModalActions\n        modalVisible={modalVisible}\n        setModalVisible={setModalVisible}\n        navigation={navigation}\n        id={id}\n      />\n    </>\n  )\n}\n\nexport default CustomListItem\n\nconst styles = StyleSheet.create({\n  left: {\n    backgroundColor: '#533461',\n    borderRadius: 8,\n    padding: 10,\n  },\n\n  income: {\n    backgroundColor: '#61ACB8',\n    borderRadius: 8,\n    padding: 10,\n  },\n  right: {\n    fontWeight: 'bold',\n    color: 'red',\n  },\n  rightIncome: {\n    fontWeight: 'bold',\n    color: 'green',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}