{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sp-lit/Desktop/cs/screens/RegisterScreen.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Input, Button, Text, Image } from 'react-native-elements';\nimport { auth } from \"../firebase\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUrl = _useState8[0],\n      setImageUrl = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      submitLoading = _useState10[0],\n      setSubmitLoading = _useState10[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackTitle: 'Back to Login'\n    });\n  }, [navigation]);\n\n  var signUp = function signUp() {\n    if (fullName && email && password) {\n      setSubmitLoading(true);\n      auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {\n        clearInputFields() & authUser.user.updateProfile({\n          displayName: fullName,\n          photoURL: imageUrl || 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQVe0cFaZ9e5Hm9X-tdWRLSvoZqg2bjemBABA&usqp=CAU'\n        });\n      }).catch(function (err) {\n        return alert(err.message) & setSubmitLoading(false);\n      });\n    } else {\n      alert('All fields are mandatory');\n      setSubmitLoading(false);\n    }\n  };\n\n  var clearInputFields = function clearInputFields() {\n    alert('Successfully Created Account');\n    navigation.replace('Home');\n    setSubmitLoading(false);\n    setFullName('');\n    setEmail('');\n    setPassword('');\n    setImageUrl('');\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    source: {\n      uri: 'https://static-s.aa-cdn.net/img/gp/20600011886807/to-aGJ31KLwqc9AWaBUyL6NLbpFwN9VEliX7nQ_AU48aO4jH6M1MltWKmThWJPndJg=s300?v=1'\n    },\n    style: {\n      width: 100,\n      height: 100,\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    h4: true,\n    style: {\n      marginBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Create an account\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Full Name\",\n    type: \"text\",\n    autoFocus: true,\n    value: fullName,\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    type: \"text\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    type: \"text\",\n    value: password,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Profile Picture Url (Optional)\",\n    type: \"text\",\n    value: imageUrl,\n    onChangeText: function onChangeText(text) {\n      return setImageUrl(text);\n    },\n    onSubmitEditing: signUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    containerStyle: styles.button,\n    title: \"Register\",\n    onPress: signUp,\n    loading: submitLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 300,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/sp-lit/Desktop/cs/screens/RegisterScreen.js"],"names":["StatusBar","React","useLayoutEffect","useState","Input","Button","Text","Image","auth","RegisterScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","imageUrl","setImageUrl","submitLoading","setSubmitLoading","setOptions","headerBackTitle","signUp","createUserWithEmailAndPassword","then","authUser","clearInputFields","user","updateProfile","displayName","photoURL","catch","err","alert","message","replace","styles","container","uri","width","height","marginBottom","inputContainer","text","button","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import {StatusBar} from 'expo-status-bar'\nimport React, {useLayoutEffect, useState} from 'react'\nimport {StyleSheet, View, KeyboardAvoidingView} from 'react-native'\nimport {Input, Button, Text, Image} from 'react-native-elements'\nimport {auth} from '../firebase'\n\nconst RegisterScreen = ({navigation}) => {\n  const [fullName, setFullName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [imageUrl, setImageUrl] = useState('')\n  const [submitLoading, setSubmitLoading] = useState(false)\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerBackTitle: 'Back to Login',\n    })\n  }, [navigation])\n\n  const signUp = () => {\n    if (fullName && email && password) {\n      setSubmitLoading(true)\n      auth\n        .createUserWithEmailAndPassword(email, password)\n        .then((authUser) => {\n          clearInputFields() &\n            authUser.user.updateProfile({\n              displayName: fullName,\n              photoURL:\n                imageUrl ||\n                'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQVe0cFaZ9e5Hm9X-tdWRLSvoZqg2bjemBABA&usqp=CAU',\n            })\n        })\n        .catch((err) => alert(err.message) & setSubmitLoading(false))\n    } else {\n      alert('All fields are mandatory')\n      setSubmitLoading(false)\n    }\n  }\n  const clearInputFields = () => {\n    alert('Successfully Created Account')\n    navigation.replace('Home')\n    setSubmitLoading(false)\n    setFullName('')\n    setEmail('')\n    setPassword('')\n    setImageUrl('')\n  }\n  return (\n    <KeyboardAvoidingView behavior='padding' style={styles.container}>\n      <StatusBar style='light' />\n      <Image\n        source={{\n          uri:\n            'https://static-s.aa-cdn.net/img/gp/20600011886807/to-aGJ31KLwqc9AWaBUyL6NLbpFwN9VEliX7nQ_AU48aO4jH6M1MltWKmThWJPndJg=s300?v=1',\n        }}\n        style={{width: 100, height: 100, marginBottom: 20}}\n      />\n      <Text h4 style={{marginBottom: 50}}>\n        Create an account\n      </Text>\n      <View style={styles.inputContainer}>\n        <Input\n          placeholder='Full Name'\n          type='text'\n          autoFocus\n          value={fullName}\n          onChangeText={(text) => setFullName(text)}\n        />\n        <Input\n          placeholder='Email'\n          type='text'\n          \n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <Input\n          placeholder='Password'\n          type='text'\n          \n          value={password}\n          secureTextEntry\n          onChangeText={(text) => setPassword(text)}\n        />\n        <Input\n          placeholder='Profile Picture Url (Optional)'\n          type='text'\n         \n          value={imageUrl}\n          onChangeText={(text) => setImageUrl(text)}\n          onSubmitEditing={signUp}\n        />\n      </View>\n      <Button\n        containerStyle={styles.button}\n        title='Register'\n        onPress={signUp}\n        loading={submitLoading}\n      />\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default RegisterScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white',\n  },\n  inputContainer: {\n    width: 300,\n  },\n  button: {\n    width: 300,\n    marginTop: 10,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}